package subnetting

import (
	"reflect"
	"strings"
	"testing"
)

func TestCalculateSubnets(t *testing.T) {
	testCases := []struct {
		parentCIDR      string
		subnetSizes     []int
		expectedSubnets [][]string
		expectError     bool
	}{
		{
			parentCIDR:      "10.1.0.0/16",
			subnetSizes:     []int{15},
			expectedSubnets: [][]string{},
			expectError:     true,
		},
		{
			parentCIDR:  "10.1.0.0/16",
			subnetSizes: []int{17 /*24, 28, 29, 32*/},
			expectedSubnets: [][]string{
				{
					"10.1.0.0/17",
					"10.1.128.0/17",
				},
				{
					"10.1.0.0/18", "10.1.64.0/18", "10.1.128.0/18", "10.1.192.0/18",
				},
				{
					"10.1.0.0/24", "10.1.1.0/24", "10.1.2.0/24", "10.1.3.0/24", "10.1.4.0/24", "10.1.5.0/24",
					"10.1.6.0/24", "10.1.7.0/24", "10.1.8.0/24", "10.1.9.0/24", "10.1.10.0/24", "10.1.11.0/24",
					"10.1.12.0/24", "10.1.13.0/24", "10.1.14.0/24", "10.1.15.0/24", "10.1.16.0/24", "10.1.17.0/24",
					"10.1.18.0/24", "10.1.19.0/24", "10.1.20.0/24", "10.1.21.0/24", "10.1.22.0/24", "10.1.23.0/24",
					"10.1.24.0/24", "10.1.25.0/24", "10.1.26.0/24", "10.1.27.0/24", "10.1.28.0/24", "10.1.29.0/24",
					"10.1.30.0/24", "10.1.31.0/24", "10.1.32.0/24", "10.1.33.0/24", "10.1.34.0/24", "10.1.35.0/24",
					"10.1.36.0/24", "10.1.37.0/24", "10.1.38.0/24", "10.1.39.0/24", "10.1.40.0/24", "10.1.41.0/24",
					"10.1.42.0/24", "10.1.43.0/24", "10.1.44.0/24", "10.1.45.0/24", "10.1.46.0/24", "10.1.47.0/24",
					"10.1.48.0/24", "10.1.49.0/24", "10.1.50.0/24", "10.1.51.0/24", "10.1.52.0/24", "10.1.53.0/24",
					"10.1.54.0/24", "10.1.55.0/24", "10.1.56.0/24", "10.1.57.0/24", "10.1.58.0/24", "10.1.59.0/24",
					"10.1.60.0/24", "10.1.61.0/24", "10.1.62.0/24", "10.1.63.0/24", "10.1.64.0/24", "10.1.65.0/24",
					"10.1.66.0/24", "10.1.67.0/24", "10.1.68.0/24", "10.1.69.0/24", "10.1.70.0/24", "10.1.71.0/24",
					"10.1.72.0/24", "10.1.73.0/24", "10.1.74.0/24", "10.1.75.0/24", "10.1.76.0/24", "10.1.77.0/24",
					"10.1.78.0/24", "10.1.79.0/24", "10.1.80.0/24", "10.1.81.0/24", "10.1.82.0/24", "10.1.83.0/24",
					"10.1.84.0/24", "10.1.85.0/24", "10.1.86.0/24", "10.1.87.0/24", "10.1.88.0/24", "10.1.89.0/24",
					"10.1.90.0/24", "10.1.91.0/24", "10.1.92.0/24", "10.1.93.0/24", "10.1.94.0/24", "10.1.95.0/24",
					"10.1.96.0/24", "10.1.97.0/24", "10.1.98.0/24", "10.1.99.0/24", "10.1.100.0/24", "10.1.101.0/24",
					"10.1.102.0/24", "10.1.103.0/24", "10.1.104.0/24", "10.1.105.0/24", "10.1.106.0/24",
					"10.1.107.0/24", "10.1.108.0/24", "10.1.109.0/24", "10.1.110.0/24", "10.1.111.0/24",
					"10.1.112.0/24", "10.1.113.0/24", "10.1.114.0/24", "10.1.115.0/24", "10.1.116.0/24",
					"10.1.117.0/24", "10.1.118.0/24", "10.1.119.0/24", "10.1.120.0/24", "10.1.121.0/24",
					"10.1.122.0/24", "10.1.123.0/24", "10.1.124.0/24", "10.1.125.0/24", "10.1.126.0/24",
					"10.1.127.0/24", "10.1.128.0/24", "10.1.129.0/24", "10.1.130.0/24", "10.1.131.0/24",
					"10.1.132.0/24", "10.1.133.0/24", "10.1.134.0/24", "10.1.135.0/24", "10.1.136.0/24",
					"10.1.137.0/24", "10.1.138.0/24", "10.1.139.0/24", "10.1.140.0/24", "10.1.141.0/24",
					"10.1.142.0/24", "10.1.143.0/24", "10.1.144.0/24", "10.1.145.0/24", "10.1.146.0/24",
					"10.1.147.0/24", "10.1.148.0/24", "10.1.149.0/24", "10.1.150.0/24", "10.1.151.0/24",
					"10.1.152.0/24", "10.1.153.0/24", "10.1.154.0/24", "10.1.155.0/24", "10.1.156.0/24",
					"10.1.157.0/24", "10.1.158.0/24", "10.1.159.0/24", "10.1.160.0/24", "10.1.161.0/24",
					"10.1.162.0/24", "10.1.163.0/24", "10.1.164.0/24", "10.1.165.0/24", "10.1.166.0/24",
					"10.1.167.0/24", "10.1.168.0/24", "10.1.169.0/24", "10.1.170.0/24", "10.1.171.0/24",
					"10.1.172.0/24", "10.1.173.0/24", "10.1.174.0/24", "10.1.175.0/24", "10.1.176.0/24",
					"10.1.177.0/24", "10.1.178.0/24", "10.1.179.0/24", "10.1.180.0/24", "10.1.181.0/24",
					"10.1.182.0/24", "10.1.183.0/24", "10.1.184.0/24", "10.1.185.0/24", "10.1.186.0/24",
					"10.1.187.0/24", "10.1.188.0/24", "10.1.189.0/24", "10.1.190.0/24", "10.1.191.0/24",
					"10.1.192.0/24", "10.1.193.0/24", "10.1.194.0/24", "10.1.195.0/24", "10.1.196.0/24",
					"10.1.197.0/24", "10.1.198.0/24", "10.1.199.0/24", "10.1.200.0/24", "10.1.201.0/24",
					"10.1.202.0/24", "10.1.203.0/24", "10.1.204.0/24", "10.1.205.0/24", "10.1.206.0/24",
					"10.1.207.0/24", "10.1.208.0/24", "10.1.209.0/24", "10.1.210.0/24", "10.1.211.0/24",
					"10.1.212.0/24", "10.1.213.0/24", "10.1.214.0/24", "10.1.215.0/24", "10.1.216.0/24",
					"10.1.217.0/24", "10.1.218.0/24", "10.1.219.0/24", "10.1.220.0/24", "10.1.221.0/24",
					"10.1.222.0/24", "10.1.223.0/24", "10.1.224.0/24", "10.1.225.0/24", "10.1.226.0/24",
					"10.1.227.0/24", "10.1.228.0/24", "10.1.229.0/24", "10.1.230.0/24", "10.1.231.0/24",
					"10.1.232.0/24", "10.1.233.0/24", "10.1.234.0/24", "10.1.235.0/24", "10.1.236.0/24",
					"10.1.237.0/24", "10.1.238.0/24", "10.1.239.0/24", "10.1.240.0/24", "10.1.241.0/24",
					"10.1.242.0/24", "10.1.243.0/24", "10.1.244.0/24", "10.1.245.0/24", "10.1.246.0/24",
					"10.1.247.0/24", "10.1.248.0/24", "10.1.249.0/24", "10.1.250.0/24", "10.1.251.0/24",
					"10.1.252.0/24", "10.1.253.0/24", "10.1.254.0/24", "10.1.255.0/24",
				},
				{
					"10.1.0.0/32", "10.1.0.1/32", "10.1.0.2/32", "10.1.0.3/32", "10.1.0.4/32", "10.1.0.5/32",
					"10.1.0.6/32", "10.1.0.7/32", "10.1.0.8/32", "10.1.0.9/32", "10.1.0.10/32", "10.1.0.11/32",
					"10.1.0.12/32", "10.1.0.13/32", "10.1.0.14/32", "10.1.0.15/32", "10.1.0.16/32", "10.1.0.17/32",
					"10.1.0.18/32", "10.1.0.19/32", "10.1.0.20/32", "10.1.0.21/32", "10.1.0.22/32", "10.1.0.23/32",
					"10.1.0.24/32", "10.1.0.25/32", "10.1.0.26/32", "10.1.0.27/32", "10.1.0.28/32", "10.1.0.29/32",
					"10.1.0.30/32", "10.1.0.31/32", "10.1.0.32/32", "10.1.0.33/32", "10.1.0.34/32", "10.1.0.35/32",
					"10.1.0.36/32", "10.1.0.37/32", "10.1.0.38/32", "10.1.0.39/32", "10.1.0.40/32", "10.1.0.41/32",
					"10.1.0.42/32", "10.1.0.43/32", "10.1.0.44/32", "10.1.0.45/32", "10.1.0.46/32", "10.1.0.47/32",
					"10.1.0.48/32", "10.1.0.49/32", "10.1.0.50/32", "10.1.0.51/32", "10.1.0.52/32", "10.1.0.53/32",
					"10.1.0.54/32", "10.1.0.55/32", "10.1.0.56/32", "10.1.0.57/32", "10.1.0.58/32", "10.1.0.59/32",
					"10.1.0.60/32", "10.1.0.61/32", "10.1.0.62/32", "10.1.0.63/32", "10.1.0.64/32", "10.1.0.65/32",
					"10.1.0.66/32", "10.1.0.67/32", "10.1.0.68/32", "10.1.0.69/32", "10.1.0.70/32", "10.1.0.71/32",
					"10.1.0.72/32", "10.1.0.73/32", "10.1.0.74/32", "10.1.0.75/32", "10.1.0.76/32", "10.1.0.77/32",
					"10.1.0.78/32", "10.1.0.79/32", "10.1.0.80/32", "10.1.0.81/32", "10.1.0.82/32", "10.1.0.83/32",
					"10.1.0.84/32", "10.1.0.85/32", "10.1.0.86/32", "10.1.0.87/32", "10.1.0.88/32", "10.1.0.89/32",
					"10.1.0.90/32", "10.1.0.91/32", "10.1.0.92/32", "10.1.0.93/32", "10.1.0.94/32", "10.1.0.95/32",
					"10.1.0.96/32", "10.1.0.97/32", "10.1.0.98/32", "10.1.0.99/32", "10.1.0.100/32", "10.1.0.101/32",
					"10.1.0.102/32", "10.1.0.103/32", "10.1.0.104/32", "10.1.0.105/32", "10.1.0.106/32",
					"10.1.0.107/32", "10.1.0.108/32", "10.1.0.109/32", "10.1.0.110/32", "10.1.0.111/32",
					"10.1.0.112/32", "10.1.0.113/32", "10.1.0.114/32", "10.1.0.115/32", "10.1.0.116/32",
					"10.1.0.117/32", "10.1.0.118/32", "10.1.0.119/32", "10.1.0.120/32", "10.1.0.121/32",
					"10.1.0.122/32", "10.1.0.123/32", "10.1.0.124/32", "10.1.0.125/32", "10.1.0.126/32",
					"10.1.0.127/32", "10.1.0.128/32", "10.1.0.129/32", "10.1.0.130/32", "10.1.0.131/32",
					"10.1.0.132/32", "10.1.0.133/32", "10.1.0.134/32", "10.1.0.135/32", "10.1.0.136/32",
					"10.1.0.137/32", "10.1.0.138/32", "10.1.0.139/32", "10.1.0.140/32", "10.1.0.141/32",
					"10.1.0.142/32", "10.1.0.143/32", "10.1.0.144/32", "10.1.0.145/32", "10.1.0.146/32",
					"10.1.0.147/32", "10.1.0.148/32", "10.1.0.149/32", "10.1.0.150/32", "10.1.0.151/32",
					"10.1.0.152/32", "10.1.0.153/32", "10.1.0.154/32", "10.1.0.155/32", "10.1.0.156/32",
					"10.1.0.157/32", "10.1.0.158/32", "10.1.0.159/32", "10.1.0.160/32", "10.1.0.161/32",
					"10.1.0.162/32", "10.1.0.163/32", "10.1.0.164/32", "10.1.0.165/32", "10.1.0.166/32",
					"10.1.0.167/32", "10.1.0.168/32", "10.1.0.169/32", "10.1.0.170/32", "10.1.0.171/32",
					"10.1.0.172/32", "10.1.0.173/32", "10.1.0.174/32", "10.1.0.175/32", "10.1.0.176/32",
					"10.1.0.177/32", "10.1.0.178/32", "10.1.0.179/32", "10.1.0.180/32", "10.1.0.181/32",
					"10.1.0.182/32", "10.1.0.183/32", "10.1.0.184/32", "10.1.0.185/32", "10.1.0.186/32",
					"10.1.0.187/32", "10.1.0.188/32", "10.1.0.189/32", "10.1.0.190/32", "10.1.0.191/32",
					"10.1.0.192/32", "10.1.0.193/32", "10.1.0.194/32", "10.1.0.195/32", "10.1.0.196/32",
					"10.1.0.197/32", "10.1.0.198/32", "10.1.0.199/32", "10.1.0.200/32", "10.1.0.201/32",
					"10.1.0.202/32", "10.1.0.203/32", "10.1.0.204/32", "10.1.0.205/32", "10.1.0.206/32",
					"10.1.0.207/32", "10.1.0.208/32", "10.1.0.209/32", "10.1.0.210/32", "10.1.0.211/32",
					"10.1.0.212/32", "10.1.0.213/32", "10.1.0.214/32", "10.1.0.215/32", "10.1.0.216/32",
					"10.1.0.217/32", "10.1.0.218/32", "10.1.0.219/32", "10.1.0.220/32", "10.1.0.221/32",
					"10.1.0.222/32", "10.1.0.223/32", "10.1.0.224/32", "10.1.0.225/32", "10.1.0.226/32",
					"10.1.0.227/32", "10.1.0.228/32", "10.1.0.229/32", "10.1.0.230/32", "10.1.0.231/32",
					"10.1.0.232/32", "10.1.0.233/32", "10.1.0.234/32", "10.1.0.235/32", "10.1.0.236/32",
					"10.1.0.237/32", "10.1.0.238/32", "10.1.0.239/32", "10.1.0.240/32", "10.1.0.241/32",
					"10.1.0.242/32", "10.1.0.243/32", "10.1.0.244/32", "10.1.0.245/32", "10.1.0.246/32",
					"10.1.0.247/32", "10.1.0.248/32", "10.1.0.249/32", "10.1.0.250/32", "10.1.0.251/32",
					"10.1.0.252/32", "10.1.0.253/32", "10.1.0.254/32", "10.1.0.255/32",
				},
				//{},
			},
			expectError: false,
		},
	}

	for _, testCase := range testCases {
		for _, subnetSize := range testCase.subnetSizes {
			subnets, err := CalculateSubnets(testCase.parentCIDR, subnetSize)
			if testCase.expectError {
				if err == nil {
					t.Errorf("Expected an error for parentCIDR: %s "+
						"and subnetSizes: %v, but got no error",
						testCase.parentCIDR,
						testCase.subnetSizes)
				}
			} else if err != nil {
				t.Errorf("Unexpected error for parentCIDR: %s and subnetSizes: %d: %s",
					testCase.parentCIDR,
					subnetSize,
					err)
			}

			for i, actualSubnet := range subnets {
				actualSubnet = strings.TrimSpace(actualSubnet)
				expectedSubnet := testCase.expectedSubnets[0][i]
				if !reflect.DeepEqual(actualSubnet, expectedSubnet) {
					t.Errorf("Mismatch in subnets for parentCIDR: %s and subnetSizes: %d.\n"+
						"Expected: '%s'\n"+
						"Got     : '%s'",
						testCase.parentCIDR,
						subnetSize,
						expectedSubnet,
						actualSubnet)
				}
			}
		}
	}
}
