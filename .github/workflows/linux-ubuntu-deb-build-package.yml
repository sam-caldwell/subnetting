---
name: Linux Ubuntu Debian Build and Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GO111MODULE: "on"

jobs:
  pre-check-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.17', '1.18', '1.19', '1.20']
        go-arch: ['amd64', 'arm64']
        go-opsys: ['linux', 'darwin']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download -x

      - name: Test with Go
        run: |
          go test -json ./...

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.20' ]
        go-arch: [ 'amd64' ]
        go-opsys: [ 'linux' ]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download -x

      - name: Build with go
        run: |
          mkdir -p build/
          GOOS=${{ matrix.go-opsys }} \
          GOARCH=${{ matrix.go-arch }} \
            go build -o build/calculateSubnets ./cmd/calculateSubnets/main.go

      - name: Create Debian/Ubuntu Package
        run: |
          cd build/
          mkdir -p debian/DEBIAN
          echo "Package: calculateSubnets" > debian/DEBIAN/control
          echo "Version: ${{ matrix.go-version }}.$(date +%s)" >> debian/DEBIAN/control
          echo "Architecture: ${{ matrix.go-arch }}" >> debian/DEBIAN/control
          echo "Maintainer: Sam Caldwell <mail@samcaldwell.net>" >> debian/DEBIAN/control
          echo "Description: calculateSubnets binary" >> debian/DEBIAN/control
          mkdir -p debian/usr/bin
          ls -la
          cp calculateSubnets debian/usr/bin
          dpkg-deb --build debian
          ls -la
          cp debian.deb subnetting-${{ matrix.go-opsys }}/${{ matrix.go-arch }}.$(date +%s)".deb
          ls -la
          pwd

      - name: Set Release Version
        id: set_version
        run: |
          echo "::set-output name=version::${{ matrix.go-opsys }}/${{ matrix.go-arch }}.$(date +%s)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ format('v{0}', steps.set_version.outputs.version) }}
          release_name: Release ${{ steps.set_version.outputs.version }}
          body: |
            This is the release of calculateSubnets ${{ steps.set_version.outputs.version }}.
          draft: false
          prerelease: false

      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Debian/Ubuntu Package ${{ matrix.go-arch }}/${{ matrix.go-version }}
          path: build/subnetting-${{ matrix.go-opsys }}/${{ matrix.go-arch }}.$(date +%s)".deb